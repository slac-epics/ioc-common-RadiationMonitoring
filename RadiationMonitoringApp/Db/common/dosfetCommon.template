#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBDEND


#
# DOSFET serial device database template file
#
#
# Required Macros:
#   P
#       EPICS prefix.
#       Every PV for this device starts with this prefix
#
# User can enable or disable all serial communications
# with the device using this PV.
# Turning it off keeps error messages from spewing to the console.
record(bo, "$(P):COMM:ENABLE") {
  field(DESC, "User Enable/Disable of comms")
  field(ZNAM, "Comm Disabled!")
  field(ONAM, "Comm Enabled")
  field(FLNK, "$(P):ID PP")
  field(PINI, "YES")
  field(VAL, "1")
}

# This record looks at $(P):COMM:ENABLE and
# one serial query PV that is used to see if
# the device is available and talking to us.
record(calcout, "$(P):COMM:NOT_READY") {
  field(INPA, "$(P):COMM:ENABLE CPP")
  field(CALC, "!A")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P):COMM:SHUTDOWN PP")
  field(IVOA, "Set output to IVOV")
  field(IVOV, "1")
}

# This fanout writes 0 to one or more PV's
# which can be used to set status or other
# PV's to indicate communication is down.
record(dfanout, "$(P):COMM:SHUTDOWN") {
  field(DOL, "0")
  field(OMSL, "closed_loop")
}

record(stringin, "$(P):VERSION") {
  field(DESC, "Firmware Version")
  field(DTYP, "stream")
  field(INP, "@dosfet.proto get_version $(PORT)")
  field(PINI, "YES")
  field(SDIS, "$(P):COMM:NOT_READY")
  field(DISS, "INVALID")
}

# Read the device serial #
record(longin, "$(P):ID") {
  field(DESC, "Serial number")
  field(DTYP, "stream")
  field(INP, "@dosfet.proto get_serial $(PORT)")
  field(PINI, "YES")
  field(SDIS, "$(P):COMM:NOT_READY")
  field(DISS, "INVALID")
}

# Process this after changing a setting you want to persist when DOSFET reboots
record(bo, "$(P):SAVE_SETTINGS")
{
  field(DESC, "Make settings persist")
  field(DTYP, "stream")
  field(OUT, "@dosfet.proto save_settings() $(PORT)")
  field(SCAN, "Passive")
}

# Delay between turning on and reading FET in ms. See pdf before using.
record(longin, "$(P):DELAY") {
  field(DESC, "See documentation")
  field(EGU, "ms")
  field(DTYP, "stream")
  field(INP, "@dosfet.proto get_delay $(PORT)")
  field(SDIS, "$(P):COMM:NOT_READY")
  field(DISS, "INVALID")
  field(PINI, "YES")
  field(FLNK, "$(P):SAVE_SETTINGS")
}

record(longout, "$(P):SET_DELAY") {
  field(DESC, "See documentation")
  field(EGU, "ms")
  field(DTYP, "stream")
  field(OUT, "@dosfet.proto set_delay $(PORT)")
  field(SDIS, "$(P):COMM:NOT_READY")
  field(FLNK, "$(P):DELAY PP")
  field(LOPR, "1")
  field(HOPR, "5000")
}

# Bias applied between reads
record(ai, "$(P):BIAS") {
  field(DESC, "See documentation")
  field(EGU, "V")
  field(DTYP, "stream")
  field(INP, "@dosfet.proto get_bias $(PORT)")
  field(SDIS, "$(P):COMM:NOT_READY")
  field(DISS, "INVALID")
  field(PINI, "YES")
  field(FLNK, "$(P):SAVE_SETTINGS")
}

record(ao, "$(P):SET_BIAS") {
  field(DESC, "See documentation")
  field(EGU, "V")
  field(DTYP, "stream")
  field(OUT, "@dosfet.proto set_bias $(PORT)")
  field(SDIS, "$(P):COMM:NOT_READY")
  field(FLNK, "$(P):BIAS PP")
  field(LOPR, "1")
  field(HOPR, "30")
}

record(bo, "$(P):POLL_TEMPS")
{
  field(DESC, "Trigger temp readback")
  field(DTYP, "stream")
  field(OUT, "@dosfet.proto get_all_temps($(P)) $(PORT)")
  field(SCAN, "Passive")
  info(autosaveFields, "SCAN")
}

record( ai, "$(P):BOARD_TEMP" )
{
#	field( DTYP, "stream" )
#	field( INP, "@dosfet.proto get_temp(internal) $(PORT)" )
	field( EGU, "C" )
	field( PREC, 4 )
#	field( SCAN, "I/O Intr")
}

# Each channel needs to take its turn updating to avoid reading each other's data.
# Make a chain where each chanel is triggered by the previous one completing

record(bo, "$(P):POLL_ENABLE")
{
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
  field(OUT, "$(P):POLL_TIMER.DOPT PP")
  field(PINI, "YES")
  info(autosaveFields, "VAL")
}

record(longout, "$(P):SET_POLL_INT") {
  field(DESC, "Sampling period, 0 to disable")
  field(EGU, "s")
  field(OUT, "$(P):POLL_TIMER")
  field(FLNK, "$(P):POLL_TIMER")
  field(PINI, "YES")
  info(autosaveFields, "VAL")
}

record(calcout, "$(P):POLL_TIMER") {
  field(DESC, "Loop, trigger dose polling")
  field(SCAN, "1 second")
  field(EGU, "s")
  field(INPA,  "$(P):SET_POLL_INT PP")
  field(INPB,  "$(P):GATE_POLLING PP")
  field(CALC, "(B+1)%A")
  field(OCAL, "B+1")
  field(OUT, "$(P):GATE_POLLING.A PP")
}

record(calcout, "$(P):GATE_POLLING") {
  field(DESC, "Loop, trigger dose polling")
  field(EGU, "s")
  field(CALC, "A")
  field(OOPT, "Transition To Zero")
  field(OUT, "$(P):PROC_A PP")
}

record(bo, "$(P):PROC_A")
{
  field(DESC, "Trigger Ch.A readback")
  field(OUT, "$(P):A_READ PP")
}
record(bo, "$(P):PROC_B")
{
  field(OMSL, closed_loop)
  field(DOL, "$(P):A2_RAW CPP" )
  field(DESC, "Trigger Ch.B readback")
  field(OUT, "$(P):B_READ PP")
}
record(bo, "$(P):PROC_C")
{
  field(OMSL, closed_loop)
  field(DOL, "$(P):B2_RAW CPP" )
  field(DESC, "Trigger Ch.C readback")
  field(OUT, "$(P):C_READ PP")
}
record(bo, "$(P):PROC_D")
{
  field(OMSL, closed_loop)
  field(DOL, "$(P):C2_RAW CPP" )
  field(DESC, "Trigger Ch.D readback")
  field(OUT, "$(P):D_READ PP")
}
record(bo, "$(P):PROC_TEMPS")
{
  field(OMSL, closed_loop)
  field(DOL, "$(P):D1_RAW CPP" )
  field(DESC, "Trigger temp readback")
  field(OUT, "$(P):POLL_TEMPS PP")
}


#! Further lines contain data used by VisualDCT
#! View(0,0,0.9)
#! Record("$(P):COMM:ENABLE",60,19,0,0,"$(P):COMM:ENABLE")
#! Field("$(P):COMM:ENABLE.FLNK",16777215,1,"$(P):COMM:ENABLE.FLNK")
#! Link("$(P):COMM:ENABLE.FLNK","$(P):ID")
#! Field("$(P):COMM:ENABLE.VAL",16777215,1,"$(P):COMM:ENABLE.VAL")
#! Record("$(P):COMM:NOT_READY",40,199,0,0,"$(P):COMM:NOT_READY")
#! Field("$(P):COMM:NOT_READY.INPA",16777215,1,"$(P):COMM:NOT_READY.INPA")
#! Link("$(P):COMM:NOT_READY.INPA","$(P):COMM:ENABLE.VAL")
#! Field("$(P):COMM:NOT_READY.OUT",16777215,1,"$(P):COMM:NOT_READY.OUT")
#! Link("$(P):COMM:NOT_READY.OUT","$(P):COMM:SHUTDOWN.VAL")
#! Field("$(P):COMM:NOT_READY.VAL",16777215,1,"$(P):COMM:NOT_READY.VAL")
#! Record("$(P):COMM:SHUTDOWN",60,416,0,0,"$(P):COMM:SHUTDOWN")
#! Field("$(P):COMM:SHUTDOWN.VAL",16777215,1,"$(P):COMM:SHUTDOWN.VAL")
#! Record("$(P):VERSION",360,-1,0,0,"$(P):VERSION")
#! Field("$(P):VERSION.SDIS",16777215,0,"$(P):VERSION.SDIS")
#! Link("$(P):VERSION.SDIS","$(P):COMM:NOT_READY.VAL")
#! Record("$(P):ID",380,222,0,0,"$(P):ID")
#! Record("$(P):SEQ",340,442,0,0,"$(P):SEQ")
#! Record("$(P):PERIOD",600,399,0,0,"$(P):PERIOD")
#! Field("$(P):PERIOD.SDIS",16777215,0,"$(P):PERIOD.SDIS")
#! Link("$(P):PERIOD.SDIS","$(P):COMM:NOT_READY.VAL")
#! Field("$(P):PERIOD.VAL",16777215,0,"$(P):PERIOD.VAL")
#! Record("$(P):SET_POLL_INT",620,19,0,0,"$(P):SET_POLL_INT")
#! Field("$(P):SET_POLL_INT.SDIS",16777215,0,"$(P):SET_POLL_INT.SDIS")
#! Link("$(P):SET_POLL_INT.SDIS","$(P):COMM:NOT_READY.VAL")
#! Field("$(P):SET_POLL_INT.FLNK",16777215,0,"$(P):SET_POLL_INT.FLNK")
#! Link("$(P):SET_POLL_INT.FLNK","$(P):POLL_TIMER")
#! Record("$(P):DELAY",880,259,0,0,"$(P):DELAY")
#! Field("$(P):DELAY.SDIS",16777215,0,"$(P):DELAY.SDIS")
#! Link("$(P):DELAY.SDIS","$(P):COMM:NOT_READY.VAL")
#! Record("$(P):SET_DELAY",920,30,0,0,"$(P):SET_DELAY")
#! Field("$(P):SET_DELAY.SDIS",16777215,0,"$(P):SET_DELAY.SDIS")
#! Link("$(P):SET_DELAY.SDIS","$(P):COMM:NOT_READY.VAL")
#! Field("$(P):SET_DELAY.FLNK",16777215,0,"$(P):SET_DELAY.FLNK")
#! Link("$(P):SET_DELAY.FLNK","$(P):DELAY")
#! Record("$(P):POLL_TIMER",600,242,0,0,"$(P):POLL_TIMER")
#! Field("$(P):POLL_TIMER.LNK1",16777215,0,"$(P):POLL_TIMER.LNK1")
#! Link("$(P):POLL_TIMER.LNK1","$(P):PERIOD.VAL")
